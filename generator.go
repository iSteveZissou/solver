package Solver

// Get empty puzzle
func GetPuzzle() [9][9]int {

	var b [9][9]int
	b[0] = [9]int{5, 3, 0, 0, 7, 0, 0, 0, 0}
	b[1] = [9]int{6, 0, 0, 1, 9, 5, 0, 0, 0}
	b[2] = [9]int{0, 9, 8, 0, 0, 0, 0, 6, 0}
	b[3] = [9]int{8, 0, 0, 0, 6, 0, 0, 0, 3}
	b[4] = [9]int{4, 0, 0, 8, 0, 3, 0, 0, 1}
	b[5] = [9]int{7, 0, 0, 0, 2, 0, 0, 0, 6}
	b[6] = [9]int{0, 6, 0, 0, 0, 0, 2, 8, 0}
	b[7] = [9]int{0, 0, 0, 4, 1, 9, 0, 0, 5}
	b[8] = [9]int{0, 0, 0, 0, 8, 0, 0, 7, 9}

	return b

}

// get new puzzle
func GetEmptyPuzzle() [9][9]int {

	var b [9][9]int
	b[0] = [9]int{0, 0, 0, 0, 0, 0, 0, 0, 0}
	b[1] = [9]int{0, 0, 0, 0, 0, 0, 0, 0, 0}
	b[2] = [9]int{0, 0, 0, 0, 0, 0, 0, 0, 0}
	b[3] = [9]int{0, 0, 0, 0, 0, 0, 0, 0, 0}
	b[4] = [9]int{0, 0, 0, 0, 0, 0, 0, 0, 0}
	b[5] = [9]int{0, 0, 0, 0, 0, 0, 0, 0, 0}
	b[6] = [9]int{0, 0, 0, 0, 0, 0, 0, 0, 0}
	b[7] = [9]int{0, 0, 0, 0, 0, 0, 0, 0, 0}
	b[8] = [9]int{0, 0, 0, 0, 0, 0, 0, 0, 0}

	return b
}
